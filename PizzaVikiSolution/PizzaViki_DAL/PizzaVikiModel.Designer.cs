//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PizzaVikiCategoriesModel", "FK_MainTable_Areas", "Areas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PizzaViki_DAL.Area), "MainTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PizzaViki_DAL.MainTable), true)]
[assembly: EdmRelationshipAttribute("PizzaVikiCategoriesModel", "FK_SubAreas_Areas", "Areas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PizzaViki_DAL.Area), "SubAreas", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PizzaViki_DAL.SubArea), true)]
[assembly: EdmRelationshipAttribute("PizzaVikiCategoriesModel", "FK_CategoriesViewStyles_Category", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PizzaViki_DAL.Category), "CategoriesViewStyles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PizzaViki_DAL.CategoryViewStyle), true)]
[assembly: EdmRelationshipAttribute("PizzaVikiCategoriesModel", "FK_MainTable_Category1", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PizzaViki_DAL.Category), "MainTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PizzaViki_DAL.MainTable), true)]
[assembly: EdmRelationshipAttribute("PizzaVikiCategoriesModel", "FK_Product_Category", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PizzaViki_DAL.Category), "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PizzaViki_DAL.Product), true)]
[assembly: EdmRelationshipAttribute("PizzaVikiCategoriesModel", "FK_MainTable_PhoneOrders", "PhoneOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PizzaViki_DAL.PhoneOrder), "MainTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PizzaViki_DAL.MainTable), true)]

#endregion

namespace PizzaViki_DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PizzaVikiCategoriesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PizzaVikiCategoriesEntities object using the connection string found in the 'PizzaVikiCategoriesEntities' section of the application configuration file.
        /// </summary>
        public PizzaVikiCategoriesEntities() : base("name=PizzaVikiCategoriesEntities", "PizzaVikiCategoriesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PizzaVikiCategoriesEntities object.
        /// </summary>
        public PizzaVikiCategoriesEntities(string connectionString) : base(connectionString, "PizzaVikiCategoriesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PizzaVikiCategoriesEntities object.
        /// </summary>
        public PizzaVikiCategoriesEntities(EntityConnection connection) : base(connection, "PizzaVikiCategoriesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Area> Areas
        {
            get
            {
                if ((_Areas == null))
                {
                    _Areas = base.CreateObjectSet<Area>("Areas");
                }
                return _Areas;
            }
        }
        private ObjectSet<Area> _Areas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryViewStyle> CategoriesViewStyles
        {
            get
            {
                if ((_CategoriesViewStyles == null))
                {
                    _CategoriesViewStyles = base.CreateObjectSet<CategoryViewStyle>("CategoriesViewStyles");
                }
                return _CategoriesViewStyles;
            }
        }
        private ObjectSet<CategoryViewStyle> _CategoriesViewStyles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MainTable> MainTables
        {
            get
            {
                if ((_MainTables == null))
                {
                    _MainTables = base.CreateObjectSet<MainTable>("MainTables");
                }
                return _MainTables;
            }
        }
        private ObjectSet<MainTable> _MainTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhoneOrder> PhoneOrders
        {
            get
            {
                if ((_PhoneOrders == null))
                {
                    _PhoneOrders = base.CreateObjectSet<PhoneOrder>("PhoneOrders");
                }
                return _PhoneOrders;
            }
        }
        private ObjectSet<PhoneOrder> _PhoneOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubArea> SubAreas
        {
            get
            {
                if ((_SubAreas == null))
                {
                    _SubAreas = base.CreateObjectSet<SubArea>("SubAreas");
                }
                return _SubAreas;
            }
        }
        private ObjectSet<SubArea> _SubAreas;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Areas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAreas(Area area)
        {
            base.AddObject("Areas", area);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoriesViewStyles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoriesViewStyles(CategoryViewStyle categoriesViewStyle)
        {
            base.AddObject("CategoriesViewStyles", categoriesViewStyle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MainTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMainTables(MainTable mainTable)
        {
            base.AddObject("MainTables", mainTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhoneOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhoneOrders(PhoneOrder phoneOrder)
        {
            base.AddObject("PhoneOrders", phoneOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubAreas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubAreas(SubArea subArea)
        {
            base.AddObject("SubAreas", subArea);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="Area")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Area : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Area object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Area CreateArea(global::System.Int32 id, global::System.String name)
        {
            Area area = new Area();
            area.id = id;
            area.Name = name;
            return area;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_Areas", "MainTable")]
        public EntityCollection<MainTable> MainTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_Areas", "MainTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_Areas", "MainTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_SubAreas_Areas", "SubAreas")]
        public EntityCollection<SubArea> SubAreas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubArea>("PizzaVikiCategoriesModel.FK_SubAreas_Areas", "SubAreas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubArea>("PizzaVikiCategoriesModel.FK_SubAreas_Areas", "SubAreas", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="CategoriesViewStyle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryViewStyle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoriesViewStyle object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="backgroundImagePath">Initial value of the BackgroundImagePath property.</param>
        /// <param name="headerBackgroundImagePath">Initial value of the HeaderBackgroundImagePath property.</param>
        public static CategoryViewStyle CreateCategoriesViewStyle(global::System.Int32 id, global::System.String backgroundImagePath, global::System.String headerBackgroundImagePath)
        {
            CategoryViewStyle categoriesViewStyle = new CategoryViewStyle();
            categoriesViewStyle.id = id;
            categoriesViewStyle.BackgroundImagePath = backgroundImagePath;
            categoriesViewStyle.HeaderBackgroundImagePath = headerBackgroundImagePath;
            return categoriesViewStyle;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackgroundImagePath
        {
            get
            {
                return _BackgroundImagePath;
            }
            set
            {
                OnBackgroundImagePathChanging(value);
                ReportPropertyChanging("BackgroundImagePath");
                _BackgroundImagePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackgroundImagePath");
                OnBackgroundImagePathChanged();
            }
        }
        private global::System.String _BackgroundImagePath;
        partial void OnBackgroundImagePathChanging(global::System.String value);
        partial void OnBackgroundImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeaderBackgroundImagePath
        {
            get
            {
                return _HeaderBackgroundImagePath;
            }
            set
            {
                OnHeaderBackgroundImagePathChanging(value);
                ReportPropertyChanging("HeaderBackgroundImagePath");
                _HeaderBackgroundImagePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HeaderBackgroundImagePath");
                OnHeaderBackgroundImagePathChanged();
            }
        }
        private global::System.String _HeaderBackgroundImagePath;
        partial void OnHeaderBackgroundImagePathChanging(global::System.String value);
        partial void OnHeaderBackgroundImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryTitleImage
        {
            get
            {
                return _CategoryTitleImage;
            }
            set
            {
                OnCategoryTitleImageChanging(value);
                ReportPropertyChanging("CategoryTitleImage");
                _CategoryTitleImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryTitleImage");
                OnCategoryTitleImageChanged();
            }
        }
        private global::System.String _CategoryTitleImage;
        partial void OnCategoryTitleImageChanging(global::System.String value);
        partial void OnCategoryTitleImageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_CategoriesViewStyles_Category", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_CategoriesViewStyles_Category", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_CategoriesViewStyles_Category", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_CategoriesViewStyles_Category", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("PizzaVikiCategoriesModel.FK_CategoriesViewStyles_Category", "Categories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="backgroundImagePath">Initial value of the BackgroundImagePath property.</param>
        /// <param name="link">Initial value of the Link property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name, global::System.String backgroundImagePath, global::System.String link, global::System.String title)
        {
            Category category = new Category();
            category.id = id;
            category.Name = name;
            category.BackgroundImagePath = backgroundImagePath;
            category.Link = link;
            category.Title = title;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackgroundImagePath
        {
            get
            {
                return _BackgroundImagePath;
            }
            set
            {
                OnBackgroundImagePathChanging(value);
                ReportPropertyChanging("BackgroundImagePath");
                _BackgroundImagePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackgroundImagePath");
                OnBackgroundImagePathChanged();
            }
        }
        private global::System.String _BackgroundImagePath;
        partial void OnBackgroundImagePathChanging(global::System.String value);
        partial void OnBackgroundImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_CategoriesViewStyles_Category", "CategoriesViewStyles")]
        public EntityCollection<CategoryViewStyle> CategoriesViewStyles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryViewStyle>("PizzaVikiCategoriesModel.FK_CategoriesViewStyles_Category", "CategoriesViewStyles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryViewStyle>("PizzaVikiCategoriesModel.FK_CategoriesViewStyles_Category", "CategoriesViewStyles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_Category1", "MainTable")]
        public EntityCollection<MainTable> MainTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_Category1", "MainTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_Category1", "MainTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_Product_Category", "Products")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("PizzaVikiCategoriesModel.FK_Product_Category", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("PizzaVikiCategoriesModel.FK_Product_Category", "Products", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="MainTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MainTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MainTable object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="categoriesViewStylesID">Initial value of the CategoriesViewStylesID property.</param>
        /// <param name="phoneOrders">Initial value of the PhoneOrders property.</param>
        /// <param name="areaID">Initial value of the AreaID property.</param>
        public static MainTable CreateMainTable(global::System.Int32 id, global::System.Int32 categoryID, global::System.Int32 categoriesViewStylesID, global::System.Int32 phoneOrders, global::System.Int32 areaID)
        {
            MainTable mainTable = new MainTable();
            mainTable.id = id;
            mainTable.CategoryID = categoryID;
            mainTable.CategoriesViewStylesID = categoriesViewStylesID;
            mainTable.PhoneOrders = phoneOrders;
            mainTable.AreaID = areaID;
            return mainTable;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoriesViewStylesID
        {
            get
            {
                return _CategoriesViewStylesID;
            }
            set
            {
                OnCategoriesViewStylesIDChanging(value);
                ReportPropertyChanging("CategoriesViewStylesID");
                _CategoriesViewStylesID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoriesViewStylesID");
                OnCategoriesViewStylesIDChanged();
            }
        }
        private global::System.Int32 _CategoriesViewStylesID;
        partial void OnCategoriesViewStylesIDChanging(global::System.Int32 value);
        partial void OnCategoriesViewStylesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhoneOrders
        {
            get
            {
                return _PhoneOrders;
            }
            set
            {
                OnPhoneOrdersChanging(value);
                ReportPropertyChanging("PhoneOrders");
                _PhoneOrders = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneOrders");
                OnPhoneOrdersChanged();
            }
        }
        private global::System.Int32 _PhoneOrders;
        partial void OnPhoneOrdersChanging(global::System.Int32 value);
        partial void OnPhoneOrdersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AreaID
        {
            get
            {
                return _AreaID;
            }
            set
            {
                OnAreaIDChanging(value);
                ReportPropertyChanging("AreaID");
                _AreaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaID");
                OnAreaIDChanged();
            }
        }
        private global::System.Int32 _AreaID;
        partial void OnAreaIDChanging(global::System.Int32 value);
        partial void OnAreaIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_Areas", "Areas")]
        public Area Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("PizzaVikiCategoriesModel.FK_MainTable_Areas", "Areas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("PizzaVikiCategoriesModel.FK_MainTable_Areas", "Areas").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Area> AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("PizzaVikiCategoriesModel.FK_MainTable_Areas", "Areas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Area>("PizzaVikiCategoriesModel.FK_MainTable_Areas", "Areas", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_Category1", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_MainTable_Category1", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_MainTable_Category1", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_MainTable_Category1", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("PizzaVikiCategoriesModel.FK_MainTable_Category1", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_PhoneOrders", "PhoneOrders")]
        public PhoneOrder PhoneOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneOrder>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "PhoneOrders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneOrder>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "PhoneOrders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhoneOrder> PhoneOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneOrder>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "PhoneOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhoneOrder>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "PhoneOrders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="PhoneOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhoneOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhoneOrder object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="operatorName">Initial value of the OperatorName property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        public static PhoneOrder CreatePhoneOrder(global::System.Int32 id, global::System.String operatorName, global::System.String phoneNumber)
        {
            PhoneOrder phoneOrder = new PhoneOrder();
            phoneOrder.id = id;
            phoneOrder.OperatorName = operatorName;
            phoneOrder.PhoneNumber = phoneNumber;
            return phoneOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OperatorName
        {
            get
            {
                return _OperatorName;
            }
            set
            {
                OnOperatorNameChanging(value);
                ReportPropertyChanging("OperatorName");
                _OperatorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OperatorName");
                OnOperatorNameChanged();
            }
        }
        private global::System.String _OperatorName;
        partial void OnOperatorNameChanging(global::System.String value);
        partial void OnOperatorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogoImage
        {
            get
            {
                return _LogoImage;
            }
            set
            {
                OnLogoImageChanging(value);
                ReportPropertyChanging("LogoImage");
                _LogoImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogoImage");
                OnLogoImageChanged();
            }
        }
        private global::System.String _LogoImage;
        partial void OnLogoImageChanging(global::System.String value);
        partial void OnLogoImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_PhoneOrders", "MainTable")]
        public EntityCollection<MainTable> MainTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "MainTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "MainTable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="backgroundImagePath">Initial value of the BackgroundImagePath property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String name, global::System.String backgroundImagePath)
        {
            Product product = new Product();
            product.id = id;
            product.Name = name;
            product.BackgroundImagePath = backgroundImagePath;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackgroundImagePath
        {
            get
            {
                return _BackgroundImagePath;
            }
            set
            {
                OnBackgroundImagePathChanging(value);
                ReportPropertyChanging("BackgroundImagePath");
                _BackgroundImagePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackgroundImagePath");
                OnBackgroundImagePathChanged();
            }
        }
        private global::System.String _BackgroundImagePath;
        partial void OnBackgroundImagePathChanging(global::System.String value);
        partial void OnBackgroundImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ingredients
        {
            get
            {
                return _Ingredients;
            }
            set
            {
                OnIngredientsChanging(value);
                ReportPropertyChanging("Ingredients");
                _Ingredients = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ingredients");
                OnIngredientsChanged();
            }
        }
        private global::System.String _Ingredients;
        partial void OnIngredientsChanging(global::System.String value);
        partial void OnIngredientsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LowestPrice
        {
            get
            {
                return _LowestPrice;
            }
            set
            {
                OnLowestPriceChanging(value);
                ReportPropertyChanging("LowestPrice");
                _LowestPrice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LowestPrice");
                OnLowestPriceChanged();
            }
        }
        private global::System.String _LowestPrice;
        partial void OnLowestPriceChanging(global::System.String value);
        partial void OnLowestPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AveragePrice
        {
            get
            {
                return _AveragePrice;
            }
            set
            {
                OnAveragePriceChanging(value);
                ReportPropertyChanging("AveragePrice");
                _AveragePrice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AveragePrice");
                OnAveragePriceChanged();
            }
        }
        private global::System.String _AveragePrice;
        partial void OnAveragePriceChanging(global::System.String value);
        partial void OnAveragePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HighestPrice
        {
            get
            {
                return _HighestPrice;
            }
            set
            {
                OnHighestPriceChanging(value);
                ReportPropertyChanging("HighestPrice");
                _HighestPrice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HighestPrice");
                OnHighestPriceChanged();
            }
        }
        private global::System.String _HighestPrice;
        partial void OnHighestPriceChanging(global::System.String value);
        partial void OnHighestPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Double> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Double> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_Product_Category", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_Product_Category", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_Product_Category", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_Product_Category", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("PizzaVikiCategoriesModel.FK_Product_Category", "Categories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="SubArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubArea object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="areaID">Initial value of the AreaID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="delivaryPrice">Initial value of the DelivaryPrice property.</param>
        public static SubArea CreateSubArea(global::System.Int32 id, global::System.Int32 areaID, global::System.String name, global::System.String delivaryPrice)
        {
            SubArea subArea = new SubArea();
            subArea.id = id;
            subArea.AreaID = areaID;
            subArea.Name = name;
            subArea.DelivaryPrice = delivaryPrice;
            return subArea;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AreaID
        {
            get
            {
                return _AreaID;
            }
            set
            {
                OnAreaIDChanging(value);
                ReportPropertyChanging("AreaID");
                _AreaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaID");
                OnAreaIDChanged();
            }
        }
        private global::System.Int32 _AreaID;
        partial void OnAreaIDChanging(global::System.Int32 value);
        partial void OnAreaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DelivaryPrice
        {
            get
            {
                return _DelivaryPrice;
            }
            set
            {
                OnDelivaryPriceChanging(value);
                ReportPropertyChanging("DelivaryPrice");
                _DelivaryPrice = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DelivaryPrice");
                OnDelivaryPriceChanged();
            }
        }
        private global::System.String _DelivaryPrice;
        partial void OnDelivaryPriceChanging(global::System.String value);
        partial void OnDelivaryPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_SubAreas_Areas", "Areas")]
        public Area Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("PizzaVikiCategoriesModel.FK_SubAreas_Areas", "Areas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("PizzaVikiCategoriesModel.FK_SubAreas_Areas", "Areas").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Area> AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("PizzaVikiCategoriesModel.FK_SubAreas_Areas", "Areas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Area>("PizzaVikiCategoriesModel.FK_SubAreas_Areas", "Areas", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
