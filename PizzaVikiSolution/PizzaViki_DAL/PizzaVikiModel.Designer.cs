//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PizzaVikiCategoriesModel", "FK_MainTable_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PizzaViki_DAL.Category), "MainTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PizzaViki_DAL.MainTable), true)]
[assembly: EdmRelationshipAttribute("PizzaVikiCategoriesModel", "FK_Product_Category1", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PizzaViki_DAL.Category), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PizzaViki_DAL.Product), true)]
[assembly: EdmRelationshipAttribute("PizzaVikiCategoriesModel", "FK_MainTable_NavigationMenu1", "NavigationMenu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PizzaViki_DAL.NavigationMenu), "MainTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PizzaViki_DAL.MainTable), true)]
[assembly: EdmRelationshipAttribute("PizzaVikiCategoriesModel", "FK_MainTable_PhoneOrders", "PhoneOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PizzaViki_DAL.PhoneOrder), "MainTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PizzaViki_DAL.MainTable), true)]

#endregion

namespace PizzaViki_DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PizzaVikiCategoriesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PizzaVikiCategoriesEntities object using the connection string found in the 'PizzaVikiCategoriesEntities' section of the application configuration file.
        /// </summary>
        public PizzaVikiCategoriesEntities() : base("name=PizzaVikiCategoriesEntities", "PizzaVikiCategoriesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PizzaVikiCategoriesEntities object.
        /// </summary>
        public PizzaVikiCategoriesEntities(string connectionString) : base(connectionString, "PizzaVikiCategoriesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PizzaVikiCategoriesEntities object.
        /// </summary>
        public PizzaVikiCategoriesEntities(EntityConnection connection) : base(connection, "PizzaVikiCategoriesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MainTable> MainTables
        {
            get
            {
                if ((_MainTables == null))
                {
                    _MainTables = base.CreateObjectSet<MainTable>("MainTables");
                }
                return _MainTables;
            }
        }
        private ObjectSet<MainTable> _MainTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NavigationMenu> NavigationMenus
        {
            get
            {
                if ((_NavigationMenus == null))
                {
                    _NavigationMenus = base.CreateObjectSet<NavigationMenu>("NavigationMenus");
                }
                return _NavigationMenus;
            }
        }
        private ObjectSet<NavigationMenu> _NavigationMenus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhoneOrder> PhoneOrders
        {
            get
            {
                if ((_PhoneOrders == null))
                {
                    _PhoneOrders = base.CreateObjectSet<PhoneOrder>("PhoneOrders");
                }
                return _PhoneOrders;
            }
        }
        private ObjectSet<PhoneOrder> _PhoneOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MainTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMainTables(MainTable mainTable)
        {
            base.AddObject("MainTables", mainTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NavigationMenus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNavigationMenus(NavigationMenu navigationMenu)
        {
            base.AddObject("NavigationMenus", navigationMenu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhoneOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhoneOrders(PhoneOrder phoneOrder)
        {
            base.AddObject("PhoneOrders", phoneOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="backgroundImagePath">Initial value of the BackgroundImagePath property.</param>
        /// <param name="link">Initial value of the Link property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name, global::System.String backgroundImagePath, global::System.String link, global::System.String title)
        {
            Category category = new Category();
            category.id = id;
            category.Name = name;
            category.BackgroundImagePath = backgroundImagePath;
            category.Link = link;
            category.Title = title;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackgroundImagePath
        {
            get
            {
                return _BackgroundImagePath;
            }
            set
            {
                OnBackgroundImagePathChanging(value);
                ReportPropertyChanging("BackgroundImagePath");
                _BackgroundImagePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackgroundImagePath");
                OnBackgroundImagePathChanged();
            }
        }
        private global::System.String _BackgroundImagePath;
        partial void OnBackgroundImagePathChanging(global::System.String value);
        partial void OnBackgroundImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_Category", "MainTable")]
        public EntityCollection<MainTable> MainTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_Category", "MainTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_Category", "MainTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_Product_Category1", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("PizzaVikiCategoriesModel.FK_Product_Category1", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("PizzaVikiCategoriesModel.FK_Product_Category1", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="MainTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MainTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MainTable object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="navigationMenu">Initial value of the NavigationMenu property.</param>
        /// <param name="phoneOrders">Initial value of the PhoneOrders property.</param>
        public static MainTable CreateMainTable(global::System.Int32 id, global::System.Int32 categoryID, global::System.Int32 navigationMenu, global::System.Int32 phoneOrders)
        {
            MainTable mainTable = new MainTable();
            mainTable.id = id;
            mainTable.CategoryID = categoryID;
            mainTable.NavigationMenu = navigationMenu;
            mainTable.PhoneOrders = phoneOrders;
            return mainTable;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NavigationMenu
        {
            get
            {
                return _NavigationMenu;
            }
            set
            {
                OnNavigationMenuChanging(value);
                ReportPropertyChanging("NavigationMenu");
                _NavigationMenu = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NavigationMenu");
                OnNavigationMenuChanged();
            }
        }
        private global::System.Int32 _NavigationMenu;
        partial void OnNavigationMenuChanging(global::System.Int32 value);
        partial void OnNavigationMenuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhoneOrders
        {
            get
            {
                return _PhoneOrders;
            }
            set
            {
                OnPhoneOrdersChanging(value);
                ReportPropertyChanging("PhoneOrders");
                _PhoneOrders = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneOrders");
                OnPhoneOrdersChanged();
            }
        }
        private global::System.Int32 _PhoneOrders;
        partial void OnPhoneOrdersChanging(global::System.Int32 value);
        partial void OnPhoneOrdersChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_MainTable_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_MainTable_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_MainTable_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("PizzaVikiCategoriesModel.FK_MainTable_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_NavigationMenu1", "NavigationMenu")]
        public NavigationMenu NavigationMenu1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NavigationMenu>("PizzaVikiCategoriesModel.FK_MainTable_NavigationMenu1", "NavigationMenu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NavigationMenu>("PizzaVikiCategoriesModel.FK_MainTable_NavigationMenu1", "NavigationMenu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NavigationMenu> NavigationMenu1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NavigationMenu>("PizzaVikiCategoriesModel.FK_MainTable_NavigationMenu1", "NavigationMenu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NavigationMenu>("PizzaVikiCategoriesModel.FK_MainTable_NavigationMenu1", "NavigationMenu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_PhoneOrders", "PhoneOrders")]
        public PhoneOrder PhoneOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneOrder>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "PhoneOrders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneOrder>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "PhoneOrders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhoneOrder> PhoneOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneOrder>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "PhoneOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhoneOrder>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "PhoneOrders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="NavigationMenu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NavigationMenu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NavigationMenu object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="link">Initial value of the Link property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static NavigationMenu CreateNavigationMenu(global::System.Int32 id, global::System.String title, global::System.String link, global::System.String text)
        {
            NavigationMenu navigationMenu = new NavigationMenu();
            navigationMenu.id = id;
            navigationMenu.Title = title;
            navigationMenu.Link = link;
            navigationMenu.Text = text;
            return navigationMenu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_NavigationMenu1", "MainTable")]
        public EntityCollection<MainTable> MainTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_NavigationMenu1", "MainTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_NavigationMenu1", "MainTable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="PhoneOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhoneOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhoneOrder object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="operatorName">Initial value of the OperatorName property.</param>
        /// <param name="logoImage">Initial value of the LogoImage property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        public static PhoneOrder CreatePhoneOrder(global::System.Int32 id, global::System.String operatorName, global::System.String logoImage, global::System.String phoneNumber)
        {
            PhoneOrder phoneOrder = new PhoneOrder();
            phoneOrder.id = id;
            phoneOrder.OperatorName = operatorName;
            phoneOrder.LogoImage = logoImage;
            phoneOrder.PhoneNumber = phoneNumber;
            return phoneOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OperatorName
        {
            get
            {
                return _OperatorName;
            }
            set
            {
                OnOperatorNameChanging(value);
                ReportPropertyChanging("OperatorName");
                _OperatorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OperatorName");
                OnOperatorNameChanged();
            }
        }
        private global::System.String _OperatorName;
        partial void OnOperatorNameChanging(global::System.String value);
        partial void OnOperatorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogoImage
        {
            get
            {
                return _LogoImage;
            }
            set
            {
                OnLogoImageChanging(value);
                ReportPropertyChanging("LogoImage");
                _LogoImage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogoImage");
                OnLogoImageChanged();
            }
        }
        private global::System.String _LogoImage;
        partial void OnLogoImageChanging(global::System.String value);
        partial void OnLogoImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_MainTable_PhoneOrders", "MainTable")]
        public EntityCollection<MainTable> MainTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "MainTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MainTable>("PizzaVikiCategoriesModel.FK_MainTable_PhoneOrders", "MainTable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PizzaVikiCategoriesModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="backgroundImagePath">Initial value of the BackgroundImagePath property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String name, global::System.String backgroundImagePath)
        {
            Product product = new Product();
            product.id = id;
            product.Name = name;
            product.BackgroundImagePath = backgroundImagePath;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackgroundImagePath
        {
            get
            {
                return _BackgroundImagePath;
            }
            set
            {
                OnBackgroundImagePathChanging(value);
                ReportPropertyChanging("BackgroundImagePath");
                _BackgroundImagePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackgroundImagePath");
                OnBackgroundImagePathChanged();
            }
        }
        private global::System.String _BackgroundImagePath;
        partial void OnBackgroundImagePathChanging(global::System.String value);
        partial void OnBackgroundImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ingredients
        {
            get
            {
                return _Ingredients;
            }
            set
            {
                OnIngredientsChanging(value);
                ReportPropertyChanging("Ingredients");
                _Ingredients = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ingredients");
                OnIngredientsChanged();
            }
        }
        private global::System.String _Ingredients;
        partial void OnIngredientsChanging(global::System.String value);
        partial void OnIngredientsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LowestPrice
        {
            get
            {
                return _LowestPrice;
            }
            set
            {
                OnLowestPriceChanging(value);
                ReportPropertyChanging("LowestPrice");
                _LowestPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowestPrice");
                OnLowestPriceChanged();
            }
        }
        private Nullable<global::System.Double> _LowestPrice;
        partial void OnLowestPriceChanging(Nullable<global::System.Double> value);
        partial void OnLowestPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AveragePrice
        {
            get
            {
                return _AveragePrice;
            }
            set
            {
                OnAveragePriceChanging(value);
                ReportPropertyChanging("AveragePrice");
                _AveragePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AveragePrice");
                OnAveragePriceChanged();
            }
        }
        private Nullable<global::System.Double> _AveragePrice;
        partial void OnAveragePriceChanging(Nullable<global::System.Double> value);
        partial void OnAveragePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HighestPrice
        {
            get
            {
                return _HighestPrice;
            }
            set
            {
                OnHighestPriceChanging(value);
                ReportPropertyChanging("HighestPrice");
                _HighestPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighestPrice");
                OnHighestPriceChanged();
            }
        }
        private Nullable<global::System.Double> _HighestPrice;
        partial void OnHighestPriceChanging(Nullable<global::System.Double> value);
        partial void OnHighestPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Double> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Double> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PizzaVikiCategoriesModel", "FK_Product_Category1", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_Product_Category1", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_Product_Category1", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PizzaVikiCategoriesModel.FK_Product_Category1", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("PizzaVikiCategoriesModel.FK_Product_Category1", "Category", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
